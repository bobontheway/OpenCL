[Ref]
https://www.codeproject.com/Articles/990983/Androids-Graphics-Buffer-Management-System-Part-II

Android 的图形缓冲区管理系统（第二部分：BufferQueue）


在前一篇文章 `Android's graphics buffer management` 中，我讨论了 gralloc，它是
Android 图像缓冲区分配的 HAL 层。在这篇文章中，我将描述 Android 中的图形缓冲区
（graphics buffers）流程，并特别关注 `BufferQueue` 类，它在图形缓冲区的管理中发
挥了核心作用。

简介
在开始之前，我想讨论一下通用的缓冲区。...

数据缓冲区，特别是图像和图形数据缓冲区，作为特定子系统的一部分，例如 camera
子系统，但是也可以跨越多个子系统，例如在 camera 和 video 子系统之间共享的缓冲
区。缓冲区提供了一种暂时存放数据的方法，使我们能够在时间和空间上将数据的生产
与数据的消费分开。也就是说，我们可以在某一时刻生产数据，而在另一个时刻使用数
据。这讲生产者和消费者分开，并且允许生产者和消费者的行为异步执行。通常在一个事
件驱动的系统中，数据的生产者和数据的消费者通过不同的时钟源来触发。例如，手机
上的 camera 以任意的帧率产生图像帧（例如，30 帧每秒，FPS），同时显示面板（显示
预览）可以运行在不同的刷新率（例如，60HZ）。还有，即使设备能够保证在相同的频
率下操作，它们也不可能拥有相同的相位偏移，由于我们打开屏幕的时候显示操作开始，
当我们启动 camera 应用时，camera 操作在另一个任意的时间开始。当然还有漂移和抖
动导致两个子系统的异步行为。也有可能同时拥有多个消费者，或者多个生产者。例如
Surfaceflinger，使用来自多个源头的缓冲区，并讲它们合成后输出到单个缓冲区。









