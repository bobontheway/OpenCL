之前一直从事 Linux 内核底层驱动开发，内核驱动开发除了需要对操作系统有所了解外，还有就是
计算机体系结构。隐藏在设备驱动下面的是各种 Master、Slave 和 Bus 事务，Master 发起总线请
求，然后 Slave 响应请求。驱动程序通过对控制器进行编程来发起总线读、写请求。在整个过程中，
上层软件的应用行为最终都会通过驱动程序对控制器的操作转化为总线行为，以在不同的组件间传输
数据。多个组件构成一个子系统，不同的子系统构成了片上 SoC。以手机 SoC 为例，它主要包括AP、
CP 和 WCN功能子系统。AP 就是我们常说的 CPU，它包括 Core 和集成的控制器，例如 USB、eMMC、
Uart 和 LCD 等；CP 就是所谓的 Modem；WCN 提供无线连接功能，包括 WiFi、BT、GPS 和 FM 等。
每个子系统使用不同的总线将各个组件连接在一起，不同的子系统再通过高层总线架构相连，构成片
上 SoC。

现在从事 Android Graphics 相关工作。Graphics 在 Android 系统中是一个较大的子系统，它由
多个模块构成，每个模块对于刚接触上层开发的人来说理解起来都比较困难。首先是对面向对象编程
语言的理解；接着是子系统中每个功能模块是如何构建起来、它是如何工作的；还有就是各个模块是
如何分工、协同工作的。

这就需要一种有效方式把这些模块中的类、实例和对象连接起来。就像片上 SoC 中的总线一样，将
不同的组件连接在一起，构成硬件系统。在 Android 上层软件中，设计模式就扮演了硬件系统中总
线的角色。它出现在应用程序中、工具库中，以及软件框架中。


