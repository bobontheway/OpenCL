2.3 Southern Islands 设备硬件概述（GCN）
通常情况下，OpenCL 设别包括计算单元（CUs），每个计算单元拥有
一些子模块，最终由 ALUs 组成。一个工作项（或 SPMD 内核实例）
在 ALU 上执行。

对于 AMD HD79XX 设备，32 个计算单元中的每个计算单元拥有一个
标量单元和 4 个向量单元，每个包含一组 16 个处理元素（PEs），
每个处理元素（PE）包含一个 ALU。
（xbdong，每个计算单元包括 (1+4)*16 = 64 or 80 (ALUs)?）

Figure 2.7 只显示了阵列的两个计算引擎/命令处理器，它包括 AMD
HD 7XXX 家族的计算设备。四个向量单元使用 SIMD 来执行一个标量
指令。这中情况下，单个 CU 就可以同时处理来自多个 wavefront
的指令。

在 2.7 中，有两个命令处理器，它们可以同时处理两个命令队列。
标量单元，向量单元，一级数据缓存（L1）和本地数据共享（LDS）
组成一个计算单元，总共有 32 个计算单元。标量（SC）缓存是标
量单元的数据缓存，二级缓存包含指令和数据 。

正如上面所示，AMD HD 79XX 设备也包含一个标量单元，指令流同时
包含标量和向量指令。每个周期，它选择一个标量指令和一个向量
指令（如果可用，也会选择一个内存操作和分支操作）；将其中的一
个发射到标量单元，另一个到向量单元；这需要 4 个周期来发送完
整个 4 个向量核（相当与，4 个周期完成后，16 个单元执行 64 个
工作项目）

在 Southern Islands 家族中，这些 ALUs 组织到 4 个 SIMD 阵列中，
每个包含 16 个处理元素。在 VLIW 描述中，对于 16 个工作项的每
个块中，每个阵列（arrays）执行一条指令。

在 Southern Island 家族的设备中，4 个流处理器（stream core）
执行来自 4 个不同 wavefront 的代码；
（即，一个 CU 单元可以同时执行来自 4 个不同 wavefront 的代码）

// 小结：
在 GCN 中，4 个 wavefront 可以执行 4 个不同的指令；在 VLIW 中
只能执行一条指令；这两个到底有什么不同呢？
