对于功能比较丰富的程序，在实现的时候，为了便于管理，可以将不同的功能
放到不同的头文件件中，再统一编译、链接。在 OpenCL 1.2 中，支持将程序
的构建拆分为编译、链接两个步骤，这两个步骤相互独立。

这部分描述如何将构建拆分为编译和链接两个独立的步骤，在 No.4_2 中再
把功能实现放到头文件中。

1.拆分构建函数
将 clBuildProgram 拆分为 clCompileProgram 和 clLinkProgram。在
clCompileProgram 中，参数 num_input_headers、input_headers 和 header_include_names 分别表示
程序对象所包含头文件的数目、头文件对应的程序对象，以及头文件的名称，头文件给名称将和程序对
象一一对应。由于这里的程序对象没有包含头文件，这些参数分别设置为 0 和 NULL 即可，在 No.4_2 中会
根据头文件的属性来设置相关参数。

2.编译步骤
编译 clCompileProgram 成功完成后，产生的对象文件将和 program 程序对象关联，该程序对象
在链接阶段使用。

3.链接步骤
输入的程序对象在经过 clLinkProgram 连接后，生成可执行文件，可在设备端运行。


2.如果编译错误，使用 clGetProgramBuildInfo 获取编译信息，定位问题所在


参数说明
num_input_headers

指定程序对象的数目， 描述 input_headers 数组中的头文件

input_headers
数组，数组中的程序对象使用 clCreateProgramWithSource 创建，程序对象表示内嵌头文件

header_include_names
数组，其成员和 input_headers 中的程序对象一一对应。数组 header_include_names 中每个成员
指定在 program 程序对象中使用引用的内嵌头文件的名字。input_headers 中对应的成员表示程序对
象，它包含将要使用的头见文件源代码。

嵌入的头文件首先在 -I 制定的目录中搜索。

如果 header_include_names 中的多个成员引用相同的头文件名字，将使用第一个。

//==========================


num_input_programs
指定 input_programs 数组中程序对象的数目;

input_programs
程序对象的数组，被编译为二进制文件或库文件，被链接后创建可执行程序


1.使用 clCompileProgram 编译错误时，也能使用 clBuildProgramInfo 获取编译错误信息。


2.将 xxx.cl 中的 toupper 改为 tolower，转换为小写字母，待办















































